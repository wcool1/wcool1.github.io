<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>算法题详解</title>
    <link href="/2024/10/27/%E7%AE%97%E6%B3%95%E9%A2%98%E8%AF%A6%E8%A7%A3/"/>
    <url>/2024/10/27/%E7%AE%97%E6%B3%95%E9%A2%98%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<p>题解</p>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>创建博客</title>
    <link href="/2024/09/23/%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/09/23/%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本篇文章讲述搭建博客的原因、过程以及使用hexo的技巧</p></blockquote><span id="more"></span><h2 id="为什么搭建博客？"><a href="#为什么搭建博客？" class="headerlink" title="为什么搭建博客？"></a>为什么搭建博客？</h2><h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><ul><li>使用hexo搭建博客；具体参考<ul><li><a href="https://zhuanlan.zhihu.com/p/60578464">https://zhuanlan.zhihu.com/p/60578464</a></li><li><a href="https://blog.csdn.net/cat_bayi/article/details/128725230">https://blog.csdn.net/cat_bayi/article/details/128725230</a></li></ul></li></ul><ol><li><p>关联github page的仓存到本地</p></li><li><p>安装hexo</p></li><li><p>配置主题</p><ol><li>选择的是这个：<a href="https://github.com/fluid-dev/hexo-theme-fluid?tab=readme-ov-file">https://github.com/fluid-dev/hexo-theme-fluid?tab=readme-ov-file</a></li></ol></li><li><p>安装hexo-deployer-git插件实现自动远程部署：npm install hexo-deployer-git –save</p></li><li><p>然后修改 _config.yml 文件末尾的 Deployment 部分，修改成如下：</p><pre><code class="hljs">  deploy:     type: git     repository: git@github.com:用户名/用户名.github.io.git     branch: main</code></pre><ol><li>以后hexo new编辑文章后，只需要执行  hexo g -d  即可生成页面并部署到 GitHub Pages 上完成发布；</li></ol></li><li><p>关联域名： 打开<a href="https://github.com/wcool1/wcool1.github.io/settings/pages">https://github.com/wcool1/wcool1.github.io/settings/pages</a> 重新设置Custom domain：<a href="http://www.tolsz,并开启https;(github给的权益)/">www.tolsz，并开启https;(github给的权益)</a></p><ul><li>为什么github pages部署hexo之后每次hexo g -d后关联的域名都会失效,每次都要在github上手动设置吗;<ul><li>参考：<a href="https://whybee.blog.csdn.net/article/details/140328361?spm=1001.2014.3001.5502">https://whybee.blog.csdn.net/article/details/140328361?spm=1001.2014.3001.5502</a></li></ul><ol><li>不需要，只需要在github的该仓库中创建一个CNAME文件并将域名写入即可；等个1min就好了；但这样再下一次推送后CNAME文件又会失踪；原因如下</li><li>偶然中发现，刚开始还未部署hexo时本地仓库整个文件夹都和远程git仓库是关联同步的，包括CNAME和README.md都是同步的；但是部署hexo之后，远程仓库中只含有博客项目下的.deploy_git下的文件夹；每次更新使用hexo g 会根据本地内容（source中的文件）生成相应页面到pulic中， 然后hexo d进行部署时，会将public中的文件同步deploy_git下同时推送到远程的github仓库；即source下所有的文件内容对应public;比如source&#x2F;A hexo -g之后就会在public&#x2F;A 生成相应内容；</li><li>这也是为什么1中操作下CNAME文件会消失，因为public下没有CNAME文件，所以推送到远端时，自然也没有；解决办法就是在source文件夹下创建CNAME文件添加不含http前缀的域名，然后hexo g -d即可；</li><li>由于dns缓存的原因，每次更新并部署后需要过一会才能看到新的内容，样式与本地的markdown看到的几乎一样；</li></ol></li></ul></li><li><p>常用命令：</p><pre><code class="hljs">  hexo new &quot;name&quot;       # 新建文章  hexo new page &quot;name&quot;  # 新建页面  hexo g                # 生成页面  hexo d                # 部署  hexo g -d             # 生成页面并部署  hexo s                # 本地预览  hexo clean（可选）    # 清除缓存文件: 删除 public 文件夹、db.json 文件以及 _config.yml 中配置的 public_dir 目录下的所有文件。确保生成干净的网站文件: 清除缓存后，下次运行 hexo generate 命令时，会重新生成所有网站文件，避免旧文件的影响。这样会导致你直接在Public下对文件做的修改比如更换Img、html等等都会被撤销；因此，强调修改任何东西都是在source、配置文件下才是正确稳妥的；  hexo help             # 帮助</code></pre></li><li><p>基本操作</p><ol><li><p>删除页面：</p><ol><li>直接在本地source &#x2F; _post 文件夹中删除相应文件然后hexo -g -d即可</li></ol></li><li><p>修改也是一样，关于首页内容直接在public&#x2F;index.html修改，关于页在public&#x2F;about&#x2F;index.html修改即可,去相应的地方即可</p></li><li><p>实际上，hexo渲染一篇post的工作流程是：</p><pre><code class="hljs">  拿到一个markdown文件，  根据这个文件的layout类型，  进行样式排版，生成html文件，  最终展示到网页端。</code></pre></li></ol></li><li><p>想更换banner的背景图片</p></li><li><p>在网上查找免费开源的风景图片并下载下来（避免版权纠纷）推荐几个免费开源的图片网站</p><ol><li><a href="https://pixabay.com/">https://pixabay.com/</a></li><li><a href="https://unsplash.com/">https://unsplash.com/</a></li><li><a href="https://www.pexels.com/">https://www.pexels.com/</a></li></ol></li><li><p>将图片移动到public&#x2F;images文件夹下,将原来的default.png重命名为default_default.png或者直接删除;把移进来的图片改名为default.png；这样就无需在各个文件中修改图片的路径了；</p></li></ol><h2 id="hexo使用技巧"><a href="#hexo使用技巧" class="headerlink" title="hexo使用技巧"></a>hexo使用技巧</h2><ol><li>设置文章摘要和标签操作举例如下：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">hello</span> <span class="hljs-string">hexo</span> <span class="hljs-string">markdown</span><br><span class="hljs-attr">date:</span> <br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">hello</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">我是短小精悍的文章摘要(๑•̀ㅂ•́)</span> <span class="hljs-string">✧</span><br><br><span class="hljs-string">&lt;!--</span> <span class="hljs-string">more</span> <span class="hljs-string">--&gt;</span><br><br><span class="hljs-string">紧接着文章摘要的正文内容</span><br><br><br></code></pre></td></tr></table></figure></li><li>资源引用，除了url的绝对引用外，相对引用可以使用 Hexo 提供的资源文件夹功能:使用文本编辑器打开站点根目录下的 _ config.yml 文件，将 post_asset_folder 值设置为 true。Hexo 将会在我们每一次通过 hexo new title 命令创建新文章时自动创建一个同名文件夹，于是我们便可以将文章所引用的相关资源放到这个同名文件夹下，然后通过相对路径引用</li><li>分类与标签：<ol><li>二者区别：分类具有顺序性和层次性而标签没有顺序和层次；可忽略不计</li><li>在scaffolds&#x2F;post.md设置默认的文章模板如下，生成之后再加入分类&#x2F;标签即可，分类比较好用：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> &#123;&#123; <span class="hljs-string">title</span> &#125;&#125;<br><span class="hljs-attr">date:</span> &#123;&#123; <span class="hljs-string">date</span> &#125;&#125;<br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">标签</span><br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">类别</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure></li></ol></li><li>自定制、美化博客<ol><li>参考：<ol><li><a href="https://blog.kevinchu.top/2023/07/17/hexo-theme-fluid-modify/">https://blog.kevinchu.top/2023/07/17/hexo-theme-fluid-modify/</a></li><li><a href="https://blog.csdn.net/weixin_51545953/article/details/128499341">https://blog.csdn.net/weixin_51545953/article/details/128499341</a></li></ol></li><li>包括所有图片、导航栏的title、标题等等都在_conflg.主题.yml中设置</li></ol></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>

<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>create my blog</title>
    <link href="/2024/09/23/create-myblog/"/>
    <url>/2024/09/23/create-myblog/</url>
    
    <content type="html"><![CDATA[<h2 id="为什么搭建博客？"><a href="#为什么搭建博客？" class="headerlink" title="为什么搭建博客？"></a>为什么搭建博客？</h2><h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><ul><li>使用hexo搭建博客；具体参靠<ul><li><a href="https://zhuanlan.zhihu.com/p/60578464">https://zhuanlan.zhihu.com/p/60578464</a></li><li><a href="https://blog.csdn.net/cat_bayi/article/details/128725230">https://blog.csdn.net/cat_bayi/article/details/128725230</a></li></ul></li></ul><ol><li><p>关联github page的仓存到本地</p></li><li><p>安装hexo</p></li><li><p>配置主题</p><ol><li>选择的是这个：<a href="https://github.com/fluid-dev/hexo-theme-fluid?tab=readme-ov-file">https://github.com/fluid-dev/hexo-theme-fluid?tab=readme-ov-file</a></li></ol></li><li><p>安装hexo-deployer-git插件实现自动远程部署：npm install hexo-deployer-git –save</p></li><li><p>然后修改 _config.yml 文件末尾的 Deployment 部分，修改成如下：</p><pre><code class="hljs">  deploy:     type: git     repository: git@github.com:用户名/用户名.github.io.git     branch: master</code></pre><ol><li>以后hexo new编辑文章后，只需要执行  hexo g -d  即可生成页面并部署到 GitHub Pages 上完成发布；</li><li>出现一个问题：部署后tolsz.me报错404，解决办法如下<ol><li>打开<a href="https://github.com/wcool1/wcool1.github.io/settings/pages">https://github.com/wcool1/wcool1.github.io/settings/pages</a> 重新设置Custom domain：<a href="http://www.tolsz,并开启https;(github给的权益)/">www.tolsz，并开启https;(github给的权益)</a></li></ol></li></ol></li><li><p>常用命令：</p><pre><code class="hljs">  hexo new &quot;name&quot;       # 新建文章  hexo new page &quot;name&quot;  # 新建页面  hexo g                # 生成页面  hexo d                # 部署  hexo g -d             # 生成页面并部署  hexo s                # 本地预览  hexo clean            # 清除缓存和已生成的静态文件  hexo help             # 帮助</code></pre></li><li><p>基本操作</p><ol><li>删除页面：<ol><li>直接在本地source &#x2F; _post 文件夹中删除相应文件然后hexo -g -d即可</li></ol></li><li>修改也是一样</li><li>管理存档<ol><li></li></ol></li></ol></li><li><p>想更换banner的背景图片</p><ol><li>在网上查找免费开源的风景图片并下载下来（避免版权纠纷）推荐几个免费开源的图片网站<ol><li><a href="https://pixabay.com/">https://pixabay.com/</a></li><li><a href="https://unsplash.com/">https://unsplash.com/</a></li><li><a href="https://www.pexels.com/">https://www.pexels.com/</a></li></ol></li><li>将图片移动到public&#x2F;images文件夹下,将原来的default.png重命名为default_default.png或者直接删除;把移进来的图片改名为default.png；这样就无需在各个文件中修改图片的路径了；</li></ol></li><li><p>为什么github pages部署hexo之后每次hexo g -d后关联的域名都会失效,每次都要在github上手动设置吗</p><ol><li>不需要，只需要在github的该仓库中创建一个CNAME文件并将域名写入即可；等个1min就好了；但这样再下一次推送后CNAME文件又会失踪；原因如下</li><li>偶然中发现，刚开始还未部署hexo时本地仓库整个文件夹都和远程git仓库是关联同步的，包括CNAME和README.md都是同步的；但是部署hexo之后，远程仓库中只含有博客项目下的.deploy_git下的文件夹；每次更新使用hexo g 会根据本地内容（source中的文件）生成相应页面到pulic中， 然后hexo d进行部署时，会将public中的文件同步deploy_git下同时推送到远程的github仓库；</li><li>这也是为什么1中操作下CNAME文件会消失，因为public下没有CNAME文件，所以推送到远端时，自然也没有；解决办法就是在public文件夹下创建CNAME文件，然后hexo g -d即可；</li><li>由于dns缓存的原因，每次更新并部署后需要过一会才能看到新的内容，样式与本地的markdown看到的几乎一样；</li></ol></li></ol><h2 id="hexo使用技巧"><a href="#hexo使用技巧" class="headerlink" title="hexo使用技巧"></a>hexo使用技巧</h2><p>1. </p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
